"""
Django settings for cupboard_backend project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

import dns.resolver

# Avoids reading /etc/resolv.conf and uses Google's public DNS server
dns.resolver.default_resolver = dns.resolver.Resolver(configure=False)
dns.resolver.default_resolver.nameservers = ['8.8.8.8']

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialize environment variables
AUTH0_DOMAIN = os.getenv('AUTH0_DOMAIN')
AUTH0_API_IDENTIFIER = os.getenv('AUTH0_API_IDENTIFIER')
DB_NAME = os.getenv('DB_NAME')
DB_TEST_NAME = os.getenv('DB_TEST_NAME')
MONGO_URL = os.getenv('MONGO_URL')
REACT_CLIENT_ORIGIN_URL = os.getenv('REACT_CLIENT_ORIGIN_URL')
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY')
if os.getenv('DEBUG_ENABLE') == 'true':
    DEBUG = True
else:
    DEBUG = False
if os.getenv('DEBUG_PROPAGATE_EXCEPTIONS') == 'true':
    DEBUG = True
else:
    DEBUG = False


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'drf_spectacular',
    'rest_framework',
    'rest_framework_simplejwt',
    'cupboard_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'cupboard_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cupboard_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': DB_NAME,
        'CLIENT': {
            'host': MONGO_URL,
        },
        'ENFORCE_SCHEMA': False,
        'TEST': {
            'NAME': DB_TEST_NAME,
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Security
CORS_ALLOWED_ORIGINS = [REACT_CLIENT_ORIGIN_URL]


REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTTokenUserAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 100,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/day',
        'user': '1000/day'
    },
    'EXCEPTION_HANDLER': 'cupboard_app.views.api_exception_handler',
    # API version
    'ALLOWED_VERSIONS': ['v2'],
    'DEFAULT_VERSION': 'v2',
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
}


SIMPLE_JWT = {
    'ALGORITHM': 'RS256',
    'AUDIENCE': AUTH0_API_IDENTIFIER,
    'ISSUER': f'https://{AUTH0_DOMAIN}/',
    'JWK_URL': f'https://{AUTH0_DOMAIN}/.well-known/jwks.json',
    'USER_ID_CLAIM': 'sub',
    'JTI_CLAIM': None,
    'TOKEN_TYPE_CLAIM': None,
    'AUTH_TOKEN_CLASSES': ('utils.auth_helper.Auth0Token',),
    'AUTH_HEADER_TYPES': ('Bearer',),
}


SPECTACULAR_SETTINGS = {
    'TITLE': 'Cupboard API',
    'DESCRIPTION': (
        'The official Cupboard API documentation. '
        'Cupboard is the ultimate kitchen companion that takes the hassle '
        'out of meal planning and grocery management!'
    ),
    'CONTACT': {'email': 'teacup.backend@gmail.com'},
    'VERSION': None,
    'SERVE_INCLUDE_SCHEMA': False,
}


if os.getenv('RUN_PROFILER') == 'true':
    MIDDLEWARE += ['pyinstrument.middleware.ProfilerMiddleware',]
    PYINSTRUMENT_PROFILE_DIR = 'profiles'
